Written by Johannes Milczewski
diff --git a/README.md b/README.md
index d5c4d8f4c61e3beb9437f01afb72bebc2fd9642b..dbd0d15f4bbbc2c9e5ee88dbf566435ded01d078 100644
--- a/README.md
+++ b/README.md
@@ -15,7 +15,7 @@ This timestamp data may serve to derive proofs of:
 All data used and generated by this software is stored in separate Git branches. You may choose freely to publish the
 timestamps or keep them private as needed. This software runs entirely client-side.
 
-> ℹ Note: Check out this software in action on this repo: [sig/master](https://github.com/Ocead/timestamping/tree/sig/master)
+> ℹ Note: Check out this software in action on this repo: [sig/b/master](https://github.com/Ocead/timestamping/tree/sig/b/master)
 
 ## Requirements
 
@@ -49,7 +49,7 @@ to:
 > ℹ Note: if the script was installed into `.git/hooks` it is technically not part of the repository
 > and will therefore **not** be versioned through commits **nor** sent to remotes through pushes.
 
-> ⚠ Warning: If the repository you wish to install to already uses the `commit-msg` and `post-commit` hooks,
+> ⚠ Warning: If the repository you wish to install to already uses any of the hooks above,
 > make sure the scripts of this software are run **not** parallel to other hooked scripts that read or modify the
 > repository.
 
@@ -81,7 +81,7 @@ To remove automated timestamping from a repository (provided automatic installat
 
 If you also want to delete any generated timestamps:
 
-3. Force-delete the `${ts.branch.prefix}-` and `${ts.branch.prefix}/*` (`sig-` and `sig/*` by default) branches from the
+3. Force-delete the `${ts.branch.prefix}/root` and `${ts.branch.prefix}/b/*` (`sig/root` and `sig/b/*` by default) branches from the
    repository.
 
 ## Functionality
@@ -116,7 +116,7 @@ To find the timestamp of the latest you created by committing changes, check out
 (provided default options) e.g.:
 
 ```shell
-git checkout "sig/single"
+git checkout "sig/b/single"
 ```
 
 to check out the timestamps created for commits on branch `single`.
@@ -187,10 +187,10 @@ in [RFC 3161 Section 3.4](https://www.rfc-editor.org/rfc/rfc3161.html#section-3.
 You can configure an arbitrary number of individual TSAs for each repository. To configure a new timestamping server for
 a repository where this software is installed to, do the following steps:
 
-1. Check out the branch specified through `ts.branch.prefix` (`sig-` by default).<br/>
+1. Check out the branch specified through `ts.branch.prefix` (`sig/root` by default).<br/>
    Example:
    ```shell
-   git checkout sig-
+   git checkout sig/root
    ```
 
 2. In there, navigate to the directory specified in `ts.server.directory` (`rfc3161` by default) and create a new
@@ -215,7 +215,7 @@ a repository where this software is installed to, do the following steps:
    ...
    ```
 
-4. Commit this addition to `sig-`.
+4. Commit this addition to `sig/root`.
 
 > ℹ Note: For a ready-to-use list of timestamping servers, see [docs/servers.md](docs/servers.md).
 
@@ -338,18 +338,18 @@ curl --silent --header 'Content-Type: application/timestamp-query' --data-binary
 You may want to change the configuration of a TSA if the URL to the server or the certificate bundle of the server
 change. To do so (provided default options):
 
-1. Change the associated files/directory on branch `sig-`.
-2. Commit the changes to `sig-`.
+1. Change the associated files/directory on branch `sig/root`.
+2. Commit the changes to `sig/root`.
 
-Upon committing to the `sig-` branch, the timestamps for the changed TSA configurations will be updated for all branches
+Upon committing to the `sig/root` branch, the timestamps for the changed TSA configurations will be updated for all branches
 that already have a timestamp of the previous version of the TSA configuration.
 
 ### Deleting a TSA configuration
 
 To delete a TSA configuration (provided default options):
 
-1. Delete the associated directory in `rfc3161` on branch `sig-`.
-2. Commit deleting the directory to `sig-`.
+1. Delete the associated directory in `rfc3161` on branch `sig/root`.
+2. Commit deleting the directory to `sig/root`.
 
 ## Options
 
@@ -362,7 +362,7 @@ git config <option> "<value>"
 
 |Git config option|Description|Default value|
 |---|---|---|
-|`ts.branch.prefix`|The prefix used for branches created through and used by the automated timestamping.<br/>Will be appended with `-` for root branch and with `/<branch-name>` for each branch committed to.|`"sig"`|
+|`ts.branch.prefix`|The prefix used for branches created through and used by the automated timestamping.<br/>Will be appended with `/root` for root branch and with `/b/<branch-name>` for each branch committed to.|`"sig"`|
 |`ts.branch.pull`|How remote and local signing branches should me managed.<br/>May either be:<ul><li>`"default"`: As configured through `pull.rebase`</li><li>`"merge"`: Merge remote signing branches into local before timestamping or</li><li>`"rebase"`: Rebase remote signing branches into local before timestamping or</li><li>`"keep"`: Don't update local signing branches from remote.</li></ul>|`"merge"`|
 |`ts.branch.withhold`|Whether the contents of timestamping branches should be withheld from remotes.<br/>If `true`, [git-push](https://git-scm.com/docs/git-push) will fail for timestamping branches.|`"false"`|
 |`ts.commit.prefix`|The prefix used for messages for commits containing timestamps.<br/>Will be appended with the commit message of the actual commit.|`"Timestamp for: "`|
diff --git a/config.sh b/config.sh
index 6bc97920361498385f9d1433808c90d467e8e30c..d7e904647461cf359af3958fc2e63467cf75e932 100644
--- a/config.sh
+++ b/config.sh
@@ -171,7 +171,7 @@ function maybe_remove() {
 function configure_repo() {
 	local TS_BRANCH_PREFIX
 	TS_BRANCH_PREFIX=$(git config --get ts.branch.prefix)
-	if git rev-parse --verify "${TS_BRANCH_PREFIX}-" >/dev/null 2>/dev/null; then
+	if git rev-parse --verify "${TS_BRANCH_PREFIX}/root" >/dev/null 2>/dev/null; then
 		script_echo "Root signing branch already present"
 		return 0
 	fi
@@ -194,8 +194,8 @@ function configure_repo() {
 
 	# Checkout root signing branch
 	script_echo "Checking out root signing branch"
-	if ! git checkout "${TS_BRANCH_PREFIX}-" >/dev/null 2>/dev/null; then
-		git checkout --orphan "${TS_BRANCH_PREFIX}-" >/dev/null 2>/dev/null
+	if ! git checkout "${TS_BRANCH_PREFIX}/root" >/dev/null 2>/dev/null; then
+		git checkout --orphan "${TS_BRANCH_PREFIX}/root" >/dev/null 2>/dev/null
 
 		# Create initial commit in root signing branch
 		script_echo "Creating TSA config directory"
@@ -321,7 +321,7 @@ function uninstall_timestamping() {
 			mapfile -t BRANCHES < <(git branch --list | tr -d ' *')
 
 			for b in "${BRANCHES[@]}"; do
-				if [[ ${b} == "${TS_BRANCH_PREFIX}-" || ${b} == "${TS_BRANCH_PREFIX}/"* ]]; then
+				if [[ ${b} == "${TS_BRANCH_PREFIX}/root" || ${b} == "${TS_BRANCH_PREFIX}/b/"* ]]; then
 					script_echo "Removing branch ${b}"
 					git branch -D "${b}"
 				fi
diff --git a/hooks/post-commit b/hooks/post-commit
index 2711be4353c53422b790f2f88e8e7df2866e6f62..b030282d4017b37816c0da0b414ebc1e80f92fe6 100644
--- a/hooks/post-commit
+++ b/hooks/post-commit
@@ -64,9 +64,9 @@ function ts-post-commit_impl() {
 	local BRANCH
 	BRANCH=$(get_branch)
 
-	if [[ ${BRANCH} == "${TS_BRANCH_PREFIX}/"* ]]; then
+	if [[ ${BRANCH} == "${TS_BRANCH_PREFIX}/b/"* ]]; then
 		return 0
-	elif [[ "${BRANCH}" == "${TS_BRANCH_PREFIX}-" ]]; then
+	elif [[ "${BRANCH}" == "${TS_BRANCH_PREFIX}/root" ]]; then
 		COMMIT_ID=$(git rev-parse HEAD)
 		update_timestamps "${COMMIT_ID}" "${BRANCH}"
 	elif [[ -f "${GIT_DIR}/TIMESTAMP" ]]; then
diff --git a/hooks/timestamping.sh b/hooks/timestamping.sh
index 106370ed23d04ca9a33d1caa9589a044bcb80494..ffd9e0f6c7c98a703cf79c7ac222f25e27295b70 100644
--- a/hooks/timestamping.sh
+++ b/hooks/timestamping.sh
@@ -358,12 +358,6 @@ function create_timestamp() {
 		return $TS_ERROR_NO_CONFIG_DIR
 	fi
 
-	if [[ -f "${SERVER_DIRECTORY}/${TS_DIFF_FILE}" ]]; then
-		local DIFF
-
-		DATA_FILE="${SERVER_DIRECTORY}/${TS_DIFF_FILE}"
-	fi
-
 	if [[ -f "${SERVER_DIRECTORY}/cacert.sh" ]]; then
 		hook_echo "Downloading certificate for ${SERVER_DIR}"
 		"${SERVER_DIRECTORY}/cacert.sh" >"${SERVER_DIRECTORY}/${TS_SERVER_CERTIFICATE}"
@@ -421,7 +415,13 @@ function create_timestamps() {
 
 	# Loop for each timestamping server
 	for d in "${TS_SERVER_DIRECTORY}/"*/; do
-		create_timestamp "${BRANCH}" "${TS_DIFF_FILE}" "${d}"
+		local DATA_FILE
+		if [[ -f "${d}/${TS_DIFF_FILE}" ]]; then
+			DATA_FILE=$(canonize "${d}/${TS_DIFF_FILE}")
+		else
+			DATA_FILE="${TS_DIFF_FILE}"
+		fi
+		create_timestamp "${BRANCH}" "${DATA_FILE}" "${d}"
 		RETURN=$?
 		case ${RETURN} in
 		0) SIG_COUNT=$((SIG_COUNT + 1)) ;;
@@ -465,7 +465,7 @@ function update_timestamps() {
 	mapfile -t REVS < <(git branch --contains "$(git rev-list --max-parents=0 HEAD)" 2>/dev/null | tr -d " *")
 
 	for i in "${!REVS[@]}"; do
-		if [[ "${REVS[$i]}" == "${TS_BRANCH_PREFIX}/"* ]]; then
+		if [[ "${REVS[$i]}" == "${TS_BRANCH_PREFIX}/b/"* ]]; then
 			BRANCHES+=("${REVS[$i]}")
 		fi
 	done
@@ -564,8 +564,8 @@ function get_branch() {
 function get_signing_branch() {
 	local BRANCH=$1
 
-	if [[ ! ${BRANCH} == "${TS_BRANCH_PREFIX}/"* && ! ${BRANCH} == "${TS_BRANCH_PREFIX}-" ]]; then
-		echo "${TS_BRANCH_PREFIX}/${BRANCH}"
+	if [[ ! ${BRANCH} == "${TS_BRANCH_PREFIX}/b/"* && ! ${BRANCH} == "${TS_BRANCH_PREFIX}/root" ]]; then
+		echo "${TS_BRANCH_PREFIX}/b/${BRANCH}"
 	else
 		echo "${BRANCH}"
 	fi
@@ -579,11 +579,11 @@ function get_signing_branch() {
 # 	&1: The name of the signing branch
 function get_actual_signing_branch() {
 	local BRANCH=$1
-	local SIGNING_BRANCH="${TS_BRANCH_PREFIX}/$1"
+	local SIGNING_BRANCH="${TS_BRANCH_PREFIX}/b/$1"
 	if git rev-parse --verify "${SIGNING_BRANCH}" >/dev/null 2>/dev/null; then
 		echo "${SIGNING_BRANCH}"
 	else
-		echo "${TS_BRANCH_PREFIX}-"
+		echo "${TS_BRANCH_PREFIX}/root"
 	fi
 }
 
@@ -592,7 +592,7 @@ function get_actual_signing_branch() {
 # 	0: On signing branch
 # 	1: Not on signing branch
 function on_signing_branch() {
-	[[ ${BRANCH} == ${TS_BRANCH_PREFIX}/* || ${BRANCH} == "${TS_BRANCH_PREFIX}-" ]]
+	[[ ${BRANCH} == ${TS_BRANCH_PREFIX}/b/* || ${BRANCH} == "${TS_BRANCH_PREFIX}/root" ]]
 	return $?
 }
 
@@ -629,8 +629,8 @@ function checkout_signing() {
 		esac
 
 		return 0
-	elif git checkout "${TS_BRANCH_PREFIX}-" >/dev/null 2>/dev/null; then
-		hook_echo "Checking out ${TS_BRANCH_PREFIX}-"
+	elif git checkout "${TS_BRANCH_PREFIX}/root" >/dev/null 2>/dev/null; then
+		hook_echo "Checking out ${TS_BRANCH_PREFIX}/root"
 		git checkout -b "${SIGNING_BRANCH}" >/dev/null 2>/dev/null && hook_echo "Checking out new ${SIGNING_BRANCH}"
 		return $?
 	fi
@@ -651,7 +651,7 @@ function is_signing_only_object() {
 	local TS_BRANCHES=()
 	mapfile -t BRANCHES < <(git branch --contains "${OID}" | tr -d " *")
 	for b in "${BRANCHES[@]}"; do
-		if [[ ${b} != "${TS_BRANCH_PREFIX}-" && ${b} != "${TS_BRANCH_PREFIX}/"* ]]; then
+		if [[ ${b} != "${TS_BRANCH_PREFIX}/root" && ${b} != "${TS_BRANCH_PREFIX}/b/"* ]]; then
 			ACTUAL=$((ACTUAL + 1))
 		else
 			TS_BRANCHES+=("${b}")
diff --git a/test/test.sh b/test/test.sh
index f3345c6a4567b521f2d03364f0f25863c5ef7a6f..1942012e6ae07ddbf5add1eb722ffb0b04a0101f 100644
--- a/test/test.sh
+++ b/test/test.sh
@@ -8,7 +8,7 @@ function echo_error() {
 
 # Adds a TSA configuration to the repository
 function add_tsa() {
-	git checkout "sig-"
+	git checkout "sig/root"
 	mkdir "./rfc3161/zeitstempel.dfn.de"
 	curl "https://pki.pca.dfn.de/dfn-ca-global-g2/pub/cacert/chain.txt" >"./rfc3161/zeitstempel.dfn.de/cacert.pem"
 	git add "./rfc3161/zeitstempel.dfn.de/cacert.pem"
@@ -25,7 +25,7 @@ function add_tsa() {
 
 # Adds a TSA configuration with custom URL to the repository
 function add_custom_url_tsa() {
-	git checkout "sig-"
+	git checkout "sig/root"
 	mkdir "./rfc3161/freetsa"
 	curl "https://freetsa.org/files/cacert.pem" >"./rfc3161/freetsa/cacert.pem"
 	echo "https://freetsa.org/tsr" >"./rfc3161/freetsa/url"
@@ -43,7 +43,7 @@ function add_custom_url_tsa() {
 
 # Adds a TSA configuration with custom diff to the repository
 function add_custom_diff_tsa() {
-	git checkout "sig-"
+	git checkout "sig/root"
 	mkdir "./rfc3161/timestamp.digicert.com"
 	curl "https://knowledge.digicert.com/content/dam/digicertknowledgebase/attachments/time-stamp/DigiCertAssuredIDRootCA_comb.crt.pem" >"./rfc3161/timestamp.digicert.com/cacert.pem"
 	echo "echo 'Gnampf'" >"./rfc3161/timestamp.digicert.com/diff.sh"
@@ -61,7 +61,7 @@ function add_custom_diff_tsa() {
 
 # Adds a TSA configuration with custom certificate to the repository
 function add_custom_cacert_tsa() {
-	git checkout "sig-"
+	git checkout "sig/root"
 	mkdir "./rfc3161/timestamp.digicert.com"
 	echo 'curl "https://knowledge.digicert.com/content/dam/digicertknowledgebase/attachments/time-stamp/DigiCertAssuredIDRootCA_comb.crt.pem"' >"./rfc3161/timestamp.digicert.com/cacert.sh"
 	git add "./rfc3161/timestamp.digicert.com/cacert.sh"
@@ -78,7 +78,7 @@ function add_custom_cacert_tsa() {
 
 # Adds a TSA configuration with custom request to the repository
 function add_custom_request_tsa() {
-	git checkout "sig-"
+	git checkout "sig/root"
 	mkdir "./rfc3161/timestamp.digicert.com"
 	curl "https://knowledge.digicert.com/content/dam/digicertknowledgebase/attachments/time-stamp/DigiCertAssuredIDRootCA_comb.crt.pem" >"./rfc3161/timestamp.digicert.com/cacert.pem"
 	echo "openssl ts -query -cert -sha512 <&0" >"./rfc3161/timestamp.digicert.com/request.sh"
@@ -96,7 +96,7 @@ function add_custom_request_tsa() {
 
 # Adds a TSA configuration with custom response to the repository
 function add_custom_response_tsa() {
-	git checkout "sig-"
+	git checkout "sig/root"
 	mkdir "./rfc3161/freetsa"
 	curl "https://freetsa.org/files/cacert.pem" >"./rfc3161/freetsa/cacert.pem"
 	echo "curl --silent --header 'Content-Type: application/timestamp-query' --data-binary '@-' 'https://freetsa.org/tsr' <&0" >"./rfc3161/freetsa/response.sh"
@@ -125,8 +125,8 @@ function verify_first() {
 	test -f a.txt || echo_error "1: a.txt should exist."
 	! test -f .gitattributes || echo_error "1: .gitattributes should not exist."
 
-	if git rev-parse --verify "sig/master" >/dev/null 2>/dev/null; then
-		git checkout "sig/master" >/dev/null 2>/dev/null
+	if git rev-parse --verify "sig/b/master" >/dev/null 2>/dev/null; then
+		git checkout "sig/b/master" >/dev/null 2>/dev/null
 		test -d rfc3161/ || echo_error 1: 1: "rfc3161/ should exist."
 		! test -f a.txt 2>/dev/null || echo_error "1: a.txt should not exist."
 		test -f .gitattributes || echo_error "1: .gitattributes should exist."
@@ -148,8 +148,8 @@ function verify_second() {
 	test -f b.txt || echo_error "2: b.txt should exist."
 	! test -f .gitattributes || echo_error "2: .gitattributes should not exist."
 
-	if git rev-parse --verify "sig/master" >/dev/null 2>/dev/null; then
-		git checkout "sig/master" >/dev/null 2>/dev/null
+	if git rev-parse --verify "sig/b/master" >/dev/null 2>/dev/null; then
+		git checkout "sig/b/master" >/dev/null 2>/dev/null
 		test -d rfc3161/ || echo_error "2: rfc3161/ should exist."
 		! test -f a.txt 2>/dev/null || echo_error "2: a.txt should not exist."
 		! test -f b.txt 2>/dev/null || echo_error "2: b.txt should not exist."

